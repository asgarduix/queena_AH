package com.asi.service.dao.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AppHolidayExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public AppHolidayExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUuidIsNull() {
            addCriterion("UUID is null");
            return (Criteria) this;
        }

        public Criteria andUuidIsNotNull() {
            addCriterion("UUID is not null");
            return (Criteria) this;
        }

        public Criteria andUuidEqualTo(String value) {
            addCriterion("UUID =", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotEqualTo(String value) {
            addCriterion("UUID <>", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThan(String value) {
            addCriterion("UUID >", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThanOrEqualTo(String value) {
            addCriterion("UUID >=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThan(String value) {
            addCriterion("UUID <", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThanOrEqualTo(String value) {
            addCriterion("UUID <=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLike(String value) {
            addCriterion("UUID like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotLike(String value) {
            addCriterion("UUID not like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidIn(List<String> values) {
            addCriterion("UUID in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotIn(List<String> values) {
            addCriterion("UUID not in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidBetween(String value1, String value2) {
            addCriterion("UUID between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotBetween(String value1, String value2) {
            addCriterion("UUID not between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andHolidayIsNull() {
            addCriterion("HOLIDAY is null");
            return (Criteria) this;
        }

        public Criteria andHolidayIsNotNull() {
            addCriterion("HOLIDAY is not null");
            return (Criteria) this;
        }

        public Criteria andHolidayEqualTo(Date value) {
            addCriterionForJDBCDate("HOLIDAY =", value, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayNotEqualTo(Date value) {
            addCriterionForJDBCDate("HOLIDAY <>", value, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayGreaterThan(Date value) {
            addCriterionForJDBCDate("HOLIDAY >", value, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("HOLIDAY >=", value, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayLessThan(Date value) {
            addCriterionForJDBCDate("HOLIDAY <", value, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("HOLIDAY <=", value, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayIn(List<Date> values) {
            addCriterionForJDBCDate("HOLIDAY in", values, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayNotIn(List<Date> values) {
            addCriterionForJDBCDate("HOLIDAY not in", values, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("HOLIDAY between", value1, value2, "holiday");
            return (Criteria) this;
        }

        public Criteria andHolidayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("HOLIDAY not between", value1, value2, "holiday");
            return (Criteria) this;
        }

        public Criteria andMemoIsNull() {
            addCriterion("MEMO is null");
            return (Criteria) this;
        }

        public Criteria andMemoIsNotNull() {
            addCriterion("MEMO is not null");
            return (Criteria) this;
        }

        public Criteria andMemoEqualTo(String value) {
            addCriterion("MEMO =", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotEqualTo(String value) {
            addCriterion("MEMO <>", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThan(String value) {
            addCriterion("MEMO >", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThanOrEqualTo(String value) {
            addCriterion("MEMO >=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThan(String value) {
            addCriterion("MEMO <", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThanOrEqualTo(String value) {
            addCriterion("MEMO <=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLike(String value) {
            addCriterion("MEMO like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotLike(String value) {
            addCriterion("MEMO not like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoIn(List<String> values) {
            addCriterion("MEMO in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotIn(List<String> values) {
            addCriterion("MEMO not in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoBetween(String value1, String value2) {
            addCriterion("MEMO between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotBetween(String value1, String value2) {
            addCriterion("MEMO not between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("STATUS in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("STATUS not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCrtDateIsNull() {
            addCriterion("CRT_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCrtDateIsNotNull() {
            addCriterion("CRT_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCrtDateEqualTo(String value) {
            addCriterion("CRT_DATE =", value, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateNotEqualTo(String value) {
            addCriterion("CRT_DATE <>", value, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateGreaterThan(String value) {
            addCriterion("CRT_DATE >", value, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateGreaterThanOrEqualTo(String value) {
            addCriterion("CRT_DATE >=", value, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateLessThan(String value) {
            addCriterion("CRT_DATE <", value, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateLessThanOrEqualTo(String value) {
            addCriterion("CRT_DATE <=", value, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateLike(String value) {
            addCriterion("CRT_DATE like", value, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateNotLike(String value) {
            addCriterion("CRT_DATE not like", value, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateIn(List<String> values) {
            addCriterion("CRT_DATE in", values, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateNotIn(List<String> values) {
            addCriterion("CRT_DATE not in", values, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateBetween(String value1, String value2) {
            addCriterion("CRT_DATE between", value1, value2, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtDateNotBetween(String value1, String value2) {
            addCriterion("CRT_DATE not between", value1, value2, "crtDate");
            return (Criteria) this;
        }

        public Criteria andCrtUseridIsNull() {
            addCriterion("CRT_USERID is null");
            return (Criteria) this;
        }

        public Criteria andCrtUseridIsNotNull() {
            addCriterion("CRT_USERID is not null");
            return (Criteria) this;
        }

        public Criteria andCrtUseridEqualTo(Date value) {
            addCriterionForJDBCDate("CRT_USERID =", value, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridNotEqualTo(Date value) {
            addCriterionForJDBCDate("CRT_USERID <>", value, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridGreaterThan(Date value) {
            addCriterionForJDBCDate("CRT_USERID >", value, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CRT_USERID >=", value, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridLessThan(Date value) {
            addCriterionForJDBCDate("CRT_USERID <", value, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CRT_USERID <=", value, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridIn(List<Date> values) {
            addCriterionForJDBCDate("CRT_USERID in", values, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridNotIn(List<Date> values) {
            addCriterionForJDBCDate("CRT_USERID not in", values, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CRT_USERID between", value1, value2, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andCrtUseridNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CRT_USERID not between", value1, value2, "crtUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridIsNull() {
            addCriterion("ENTRY_USERID is null");
            return (Criteria) this;
        }

        public Criteria andEntryUseridIsNotNull() {
            addCriterion("ENTRY_USERID is not null");
            return (Criteria) this;
        }

        public Criteria andEntryUseridEqualTo(String value) {
            addCriterion("ENTRY_USERID =", value, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridNotEqualTo(String value) {
            addCriterion("ENTRY_USERID <>", value, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridGreaterThan(String value) {
            addCriterion("ENTRY_USERID >", value, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridGreaterThanOrEqualTo(String value) {
            addCriterion("ENTRY_USERID >=", value, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridLessThan(String value) {
            addCriterion("ENTRY_USERID <", value, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridLessThanOrEqualTo(String value) {
            addCriterion("ENTRY_USERID <=", value, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridLike(String value) {
            addCriterion("ENTRY_USERID like", value, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridNotLike(String value) {
            addCriterion("ENTRY_USERID not like", value, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridIn(List<String> values) {
            addCriterion("ENTRY_USERID in", values, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridNotIn(List<String> values) {
            addCriterion("ENTRY_USERID not in", values, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridBetween(String value1, String value2) {
            addCriterion("ENTRY_USERID between", value1, value2, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryUseridNotBetween(String value1, String value2) {
            addCriterion("ENTRY_USERID not between", value1, value2, "entryUserid");
            return (Criteria) this;
        }

        public Criteria andEntryDateIsNull() {
            addCriterion("ENTRY_DATE is null");
            return (Criteria) this;
        }

        public Criteria andEntryDateIsNotNull() {
            addCriterion("ENTRY_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andEntryDateEqualTo(Date value) {
            addCriterionForJDBCDate("ENTRY_DATE =", value, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ENTRY_DATE <>", value, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateGreaterThan(Date value) {
            addCriterionForJDBCDate("ENTRY_DATE >", value, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ENTRY_DATE >=", value, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateLessThan(Date value) {
            addCriterionForJDBCDate("ENTRY_DATE <", value, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ENTRY_DATE <=", value, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateIn(List<Date> values) {
            addCriterionForJDBCDate("ENTRY_DATE in", values, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ENTRY_DATE not in", values, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ENTRY_DATE between", value1, value2, "entryDate");
            return (Criteria) this;
        }

        public Criteria andEntryDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ENTRY_DATE not between", value1, value2, "entryDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 10 17:56:57 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table APP_HOLIDAY
     *
     * @mbg.generated Wed Apr 10 17:56:57 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}